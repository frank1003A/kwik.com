import React, { ReactNode, useEffect, useRef, useState } from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Topbar from "./Topbar";
import Sidebar from "./Sidebar";
import { useSession, signOut } from "next-auth/react";
import { useRouter } from "next/router";
import useGetter from "../hooks/useGetter";
import { ChangeEventHandler } from "react";
import { GitHub, LinkedIn } from "@mui/icons-material";
import CustomLoader from "./asset/CustomLoader";

interface Props {
  children: ReactNode;
}

export default function Layout({ children }: Props) {
  const { data: session, status } = useSession();
  const router = useRouter();
  const {} = useSession({
    required: true,
    onUnauthenticated() {
      router.replace("/auth/login");
    },
  });

  return (
    <div className={styles.parentdiv}>
     {(status === "loading" || status === "unauthenticated") ? (
      <CustomLoader text="Please wait"/>
     ): (
      <>
        <Head>
        <title>Kwik.com | Invoice Creator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/kwikifavicon.ico" />
      </Head>
      <Topbar
        userEmail={status === "authenticated" ? session?.user?.email! : ""}
        handleSignOut={() => signOut()}
      />
      <Sidebar />
      <div className={styles["parentContainer"]}>
        {children}
        <div className={styles.footer}>
          <a href="#">Implementation by frank Ezene</a>
          <div className={styles.footInfo}>
            <GitHub /> 
            <a href="https://github.com/frank1003A"
            target="_blank"
            rel="noreferrer"
            > frank1003a </a>
          </div>
          <div className={styles.footInfo}>
            <LinkedIn /> <a 
            href="https://www.linkedin.com/in/frank-ezene-454679171/"
            target="_blank"
            rel="noreferrer"
            > frankezene</a>
          </div>
        </div>
      </div>
      </>
     )}
    </div>
  );
}


/**const [bg, setBg] = useState<string>("")
  useEffect(() => {
    const handleScroll = (event: Event) => {
      setBg('#fff')
    };

    window.addEventListener('scroll', handleScroll);

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []); */

/*** // 1
const setDark = () => {

  // 2
  localStorage.setItem("theme", "dark");

  // 3
  document.documentElement.setAttribute("data-theme", "dark");
};

const setLight = () => {
  localStorage.setItem("theme", "light");
  document.documentElement.setAttribute("data-theme", "light");
};

// 4
const storedTheme = localStorage.getItem("theme");

const prefersDark =
  window.matchMedia &&
  window.matchMedia("(prefers-color-scheme: dark)").matches;

const defaultDark =
  storedTheme === "dark" || (storedTheme === null && prefersDark);

if (defaultDark) {
  setDark();
}

// 5
const toggleTheme: ChangeEventHandler<HTMLInputElement> = (e) => {
  if (e.target.checked) {
    setDark();
  } else {
    setLight();
  }
}; */
