import React, { useState } from "react";
import styles from "../../../styles/Login.module.css";
import { Typography } from "@mui/material";
import Image from "next/image";
import Link from "next/Link";
import Head from 'next/head'
import ButtonComponent from "../../../components/Button";
import GoogleIcon from "@mui/icons-material/Google";
import PasswordEmojifier from "../../../components/PasswordEmojifier";
import { useRouter } from "next/dist/client/router";
import type { NextPage } from "next";
import { signIn } from "next-auth/react"
import { motion } from "framer-motion";
import MainLogo from "../../../components/asset/MainLogo";
import { useTheme } from "next-themes"
import { WbCloudy, WbSunny } from "@mui/icons-material";
import CustomSnackbar from "../../../components/CustomSnackbar";

const login: NextPage = () => {

  const router = useRouter()

  const [userInfo , setUserInfo] = useState<{email: string, password: string }>({
    email: "",
    password: ""
  })
  const [error, setError] = useState<string>("")
  const [informUser, setInformUser] = useState<{
    successlogin: boolean;
    message: string;
  }>({
    successlogin: false,
    message: "",
  });

  const handleSubmit = async () => {
    const res = await signIn("credentials", {
      email: userInfo.email,
      password: userInfo.password,
      redirect: false,
    })
    if (res?.ok) {
      setInformUser({...informUser, successlogin: true, message: `Successful Login`}) 
      router.replace("/")
    }
    if (res?.error) setError(res.error)
  }

  const handleContrl = (): boolean => {
    let stat = false
    if (!userInfo.email || !userInfo.password) stat = true
    return stat
  }

  return (
    <div className={styles["login-container"]}>
      <Head>
        <title>Kwik.com | Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/kwikifavicon.ico" />
      </Head>
      <section id={styles.formandinput}>
        <div className={styles["form"]}>
          <Typography variant="h5" fontWeight={"bold"}>
            Login
          </Typography>
          <ButtonComponent
            innerText="Sign in with Google"
            icon={<Image src="/google_32.png" width="20" height="20"/>}
            className={styles["googlebtn"]}
          />
          <div className={styles["flex-row"]}>
            <div className={styles["dividersolid"]}></div>or sign in with Email
            <div className={styles["dividersolid"]}></div>
          </div>
          <div className={styles["form-control"]}>
            <Typography className={styles["frmtxt"]}>
              Email<span>*</span>
            </Typography>
            <input 
            value={userInfo.email}
            type="text" 
            placeholder="mail@website.com" 
            onChange={({target}) => setUserInfo({...userInfo, email: target.value})} />
          </div>
          <div className={styles["form-control"]}>
            <Typography className={styles["frmtxt"]}>
              Password<span>*</span>
            </Typography>
            <input 
            value={userInfo.password}
            type="password" 
            placeholder="min. 8 characters"
            onChange={({target}) => setUserInfo({...userInfo, password: target.value})}
             />
          </div>
          {error ? (
              <motion.span animate={{y: 5}} layout>
                <p style={{color: 'red'}}>*{error}</p>
              </motion.span>
            ): null}
          <div className={styles["frm"]}>
            <div className={styles["chckbx"]}>
              <input type="checkbox" name="rm" id={styles["rm"]} />
              <p id={styles["rmcheck"]}>Remember me</p>
            </div>
            <Link href="#">Forgot Password?</Link>
          </div>
          <ButtonComponent 
           innerText="Login" 
           className={styles["loginbtn"]}
           onClick={handleSubmit} 
           btnDisabled={handleContrl()}
           />
        </div>
        <div className={styles["frmout"]}>
          <span>Not yet registered?</span>
          <Link href="/auth/register"> Create Account</Link>
        </div>
        <div className={styles["rights"]}>
          <span>@2022 Protek All right reserved</span>
        </div>
      </section>
      <section id={styles.imgandtext}>
        <MainLogo/>
      </section>

      <CustomSnackbar
        openAlert={informUser.successlogin}
        closeAlert={() => setInformUser({ ...informUser, successlogin: false })}
        outputText={informUser.message}
        verticalPosition="top"
        horizontalPosition="left"
      />

    </div>
  );
};

export default login;

/**<div>
          <button onClick={() => setTheme("light")}>{theme! === 'dark' ? <WbCloudy /> : <WbSunny />}</button>
        </div> */


/**
          <div className={styles["logocont"]}>
            <Image src={"/kwik_favicon.png"} width={30} height={30} />
          </div> */
//<input type="password" placeholder="min. 8 characters" />

// <Image src={'/templateview.svg'} width={1000} height={1000} />
