import { Typography } from '@mui/material';
import { motion } from 'framer-motion';
import { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import React, { useEffect, useState } from 'react';

import ButtonComponent from '../../../components/Button';
import CustomSnackbar from '../../../components/CustomSnackbar';
import { initialUserData } from '../../../components/Data/initialData';
import PasswordInput from '../../../components/PasswordInput';
import { postRequest } from '../../../lib/axios/axiosClient';
import user from '../../../model/user';
import styles from '../../../styles/Login.module.css';

const Register: NextPage = () => {
  const [userState, setUserState] = useState<user>(initialUserData);
  const [isRegistered, setIsRegistered] = useState<boolean>(false)
  const [informUser, setInformUser] = useState<{
    registeralert: boolean;
    message: string;
  }>({
    registeralert: false,
    message: "",
  });

  const router = useRouter();

  const handleRegisterUser = async (): Promise<void> => {
    try {
      const userData = await postRequest("api/user/user", userState);
      if (userData.data) {
        setInformUser({
          ...informUser,
          registeralert: true,
          message: "Your account has successfully been created",
        });
      }
      setIsRegistered(true)
    } catch (error: any) {
      console.log(error.message);
    }
  };

  const handleButtonControl = (): boolean => {
    let stat = false;
    if (!(userState.email && userState.fullname && userState.password)) {
      stat = true;
    }
    return stat;
  };

  useEffect(() => {
    if (isRegistered && informUser.registeralert) router.replace("/auth/login")
  }, [isRegistered, informUser.registeralert, router])
  
  return (
    <motion.div className={styles["signup-container"]}
    initial={{width: "0%", opacity: 0}}
    animate={{width: "100%", opacity: 1}}
    exit={{width: "0%", opacity: 0, transition: {
      duration: 2, 
      ease: [0.455, 0.03, 0.515, 0.955],
    }}}
    >
      <Head>
        <title>Kwik.com | Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/kwikifavicon.ico" />
      </Head>
      <section id={styles.formandinputsignup}>
        <div className={styles["form"]}>
          <Typography variant="h5" fontWeight={"bold"}>
            Sign Up
          </Typography>
          <ButtonComponent
            innerText="Sign in with Google"
            icon={<img src="/google_32.png" width="20" height="20" />}
            className={styles["googlebtn"]}
          />
          <div className={styles["flex-row"]}>
            <div className={styles["dividersolid"]}></div>or sign in with Email
            <div className={styles["dividersolid"]}></div>
          </div>
          <div className={styles["form-control"]}>
            <Typography className={styles["frmtxt"]}>
              Name<span>*</span>
            </Typography>
            <input
              value={userState.fullname}
              className={styles["input"]}
              onChange={({ target }) =>
                setUserState({ ...userState, fullname: target.value })
              }
              type="text"
              placeholder="name"
            />
          </div>
          <div className={styles["form-control"]}>
            <Typography className={styles["frmtxt"]}>
              Email<span>*</span>
            </Typography>
            <input
              value={userState.email}
              className={styles["input"]}
              onChange={({ target }) =>
                setUserState({ ...userState, email: target.value })
              }
              type="text"
              placeholder="mail@website.com"
            />
          </div>
          <div className={styles["form-control"]}>
            <Typography className={styles["frmtxt"]}>
              Password<span>*</span>
            </Typography>
             <PasswordInput
            value={userState.password as string}
            placeholder="min. 8 characters"
            onChangeHandler={({target}) =>
              setUserState({ ...userState, password: target.value })
            }
            />
          </div>
          <div className={styles["frm"]}>
            <div className={styles["chckbxlogin"]}>
              <input type="checkbox" name="rm" id={styles["rm"]} />
              <p id={styles["rmcheck"]}>I agree to </p>
            </div>
            <Link href="#">Terms & Condition</Link>
          </div>
          <ButtonComponent
            onClick={handleRegisterUser}
            innerText="Sign Up"
            className={styles["loginbtn"]}
            btnDisabled={handleButtonControl()}
          />
        </div>
        <div className={styles["frmout"]}>
          <span>Already have an Account?</span>
          <Link href="/auth/login"> Sign in</Link>
        </div>
        <div className={styles["rights"]}>
          <span>@2022 Protek All right reserved</span>
        </div>
      </section>
      <section id={styles.imgandtext}>
      <img src="/leftsvg.png" height={300} />
      </section>
      <CustomSnackbar
        openAlert={informUser.registeralert}
        closeAlert={() =>
          setInformUser({ ...informUser, registeralert: false })
        }
        outputText={informUser.message}
        verticalPosition="top"
        horizontalPosition="left"
      />
    </motion.div>
  );
};

export default Register;
